<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.a5a5lab.module.pda.PdaDao">

	<resultMap id="resultMapObj" type="com.a5a5lab.module.pda.PdaDto"></resultMap>
	
	
	
	<!-- 발주 내역 리스트 -->
	<select id="FactoryOrderList" resultMap="resultMapObj">
		select
			a.orderSeq,
		    d.shName,
		    d.shBrandCd,
		    d.shSizeCd,
		    d.shTypeCd,
		    c.shOrderCount,
		    a.regDateTime,
		    b.memName,
		    a.orderStatusCd
		FROM
			`order` AS a
		left join member AS b ON a.member_memSeq = b.memSeq
		left join order_detail AS c ON a.orderSeq = c.order_orderSeq
		left join shoes AS d ON c.shoes_shSeq = d.shSeq
		WHERE 1=1
		AND	a.orderTypeCd =21
		order by orderSeq DESC
		
		
		
		<!-- LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql} -->
	</select>
	
	<!-- 배송 리스트 뿌리기 -->
	<select id="FactoryOrderListDl" resultMap="resultMapObj">
	SELECT
		a.orderSeq,
		d.shName,
		d.shBrandCd,
		d.shSizeCd,
		d.shTypeCd,
		c.shOrderCount,
		a.regDateTime,
		b.memName,
		a.deliveryStatus,
		a.orderStatusCd
	FROM
		`order` AS a
		LEFT JOIN member AS b ON a.member_memSeq = b.memSeq
		LEFT JOIN order_detail AS c ON a.orderSeq = c.order_orderSeq
		LEFT JOIN shoes AS d ON c.shoes_shSeq = d.shSeq
	WHERE 1=1

	AND a.orderTypeCd = 20 <!-- 창고(주문) -->
	AND a.orderStatusCd= 24
	
	
	order By orderSeq DESC

		<!-- LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql} -->
	</select>
	
	<!-- 발주 내역 리스트 조회하고 그 리스트 1개를 업데이트 해서 처리상태를 입고 완료 처리하기  -->
	<update id="update" >
		UPDATE `order` SET 
			orderStatusCd = 27
		WHERE 
			orderSeq = #{orderSeq}
			AND orderStatusCd = 26
	</update>
	<!--발주 내역 리스트 조회하고 그 리스트 1개를 업데이트해서 발주갯수만큼 재고늘리기 -->
	<update id="updateStoreCount">
		UPDATE shoes AS a
		JOIN order_detail AS b ON a.shSeq = b.shoes_shSeq
        JOin `order` AS c ON c.orderSeq= b.order_orderSeq
		SET	a.shCount = CASE
					WHEN c.orderTypeCd= 20 THEN a.shCount -b.shOrderCount
                    WHEN c.orderTypeCd= 21 THEN a.shCount +b.shOrderCount
                    END
		WHERE 1=1
		
		AND b.order_orderSeq = #{orderSeq}
	</update>
	
	<!-- 배송 리스트 조회하고 그 리스트 1개를 업데이트 해서 처리상태를 입고 완료 처리하기  -->
	<update id="updateDl" >
		UPDATE `order` SET 
			deliveryStatus = 19, <!-- 배송완료 -->
			orderStatusCd = 25	<!-- 처리상태 출고완료 -->

			

		WHERE 
			orderSeq = #{orderSeq}
			AND deliveryStatus = 18 <!-- 배송전꺼만 보여주라 -->
			
	
	</update>
	
	<!-- 발주번호로 단건 조회 -->
	<select id="selectOne" resultMap="resultMapObj">
	  SELECT 
	    a.orderSeq,
	    d.shSeq,
	    d.shName,
	    d.shSizeCd,
	    c.shOrderCount,
	    a.orderStatusCd
	  FROM `order` a
	  LEFT JOIN order_detail c ON a.orderSeq = c.order_orderSeq
	  LEFT JOIN shoes d ON c.shoes_shSeq = d.shSeq
	  WHERE 1=1
	  AND orderStatusCd = 26
	  AND orderSeq=#{orderSeq}
	    
	   
	
	</select>

	<!-- 배송번호로 단건 조회 -->
	<select id="selectOne1" resultMap="resultMapObj">
	  SELECT 
	    a.orderSeq,
	    d.shSeq,
	    d.shName,
	    d.shSizeCd,
	    c.shOrderCount,
	    a.orderStatusCd,
	    a.deliveryStatus
	  FROM `order` a
	  LEFT JOIN order_detail c ON a.orderSeq = c.order_orderSeq
	  LEFT JOIN shoes d ON c.shoes_shSeq = d.shSeq
	  WHERE 1=1
	  AND orderStatusCd = 24
	  AND orderSeq=#{orderSeq}
	    
	   
	
	</select>

	
	
	
	
	
	<!-- 주문내역 리스트 -->
	<select id="selectList"  resultMap="resultMapObj">
		select
			a.orderSeq,
			a.orderTypeCd,
			a.orderDelNy,
			c.memName,
			c.memId,
			c.memAddress,
			a.regDateTime,
			a.deliveryStatus,
			a.paymentStatus,
			a.orderStatusCd
		from
			`order` AS a
		left join member AS c ON a.member_memSeq= c.memSeq
			WHERE 1=1
		AND a.orderTypeCd = 20
		AND a.orderStatusCd = 24
		
		order By orderSeq DESC
	
	
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>